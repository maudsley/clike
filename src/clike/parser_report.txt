Terminals unused in grammar

    SYMBOL
    GOTO
    AUTO
    EXTERN
    REGISTER
    STATIC
    TYPEDEF
    SIZEOF
    VOLATILE
    SIGNED
    UNSIGNED
    LONG
    SHORT
    VOID
    BOOL
    CHAR
    INT
    FLOAT
    DOUBLE


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: multiple_external_declarations

    2 external_declaration: function_definition

    3 $@1: %empty

    4 external_declaration: STRUCT IDENTIFIER $@1 LBRACE multiple_struct_declarations RBRACE SEMICOLON

    5 multiple_external_declarations: external_declaration
    6                               | external_declaration multiple_external_declarations

    7 $@2: %empty

    8 function_definition: declaration_specifier IDENTIFIER LPAREN parameter_list RPAREN $@2 compound_statement

    9 $@3: %empty

   10 function_definition: declaration_specifier IDENTIFIER LPAREN RPAREN $@3 compound_statement

   11 declaration_specifier: type_specifier

   12 type_specifier: IDENTIFIER
   13               | CONST IDENTIFIER

   14 struct_declaration: declaration_specifier struct_declarator_list SEMICOLON

   15 multiple_struct_declarations: struct_declaration multiple_struct_declarations
   16                             | struct_declaration

   17 struct_declarator_list: direct_declarator
   18                       | direct_declarator COMMA struct_declarator_list

   19 $@4: %empty

   20 direct_declarator: IDENTIFIER $@4 direct_declarator_prime

   21 direct_declarator_prime: %empty

   22 $@5: %empty

   23 direct_declarator_prime: LBRACKET expression RBRACKET $@5 direct_declarator_prime

   24 constant_expression: conditional_expression

   25 conditional_expression: logical_or_expression
   26                       | logical_or_expression QMARK expression COLON conditional_expression

   27 logical_or_expression: logical_and_expression
   28                      | logical_or_expression OROR logical_and_expression

   29 logical_and_expression: inclusive_or_expression
   30                       | logical_and_expression ANDAND inclusive_or_expression

   31 inclusive_or_expression: exclusive_or_expression
   32                        | inclusive_or_expression OR exclusive_or_expression

   33 exclusive_or_expression: and_expression
   34                        | exclusive_or_expression XOR and_expression

   35 and_expression: equality_expression
   36               | and_expression AND equality_expression

   37 equality_expression: relational_expression
   38                    | equality_expression EQEQ relational_expression
   39                    | equality_expression NOTEQ relational_expression

   40 relational_expression: shift_expression
   41                      | relational_expression LTHAN shift_expression
   42                      | relational_expression GTHAN shift_expression
   43                      | relational_expression LTHANEQ shift_expression
   44                      | relational_expression GTHANEQ shift_expression

   45 shift_expression: additive_expression
   46                 | shift_expression LSHIFT additive_expression
   47                 | shift_expression RSHIFT additive_expression

   48 additive_expression: multiplicative_expression
   49                    | additive_expression PLUS multiplicative_expression
   50                    | additive_expression MINUS multiplicative_expression

   51 multiplicative_expression: cast_expression
   52                          | multiplicative_expression MUL cast_expression
   53                          | multiplicative_expression DIV cast_expression
   54                          | multiplicative_expression MOD cast_expression

   55 cast_expression: unary_expression

   56 unary_expression: postfix_expression
   57                 | PLUSPLUS unary_expression
   58                 | MINUSMINUS unary_expression
   59                 | MINUS cast_expression
   60                 | TILDE cast_expression
   61                 | BANG cast_expression

   62 postfix_expression: primary_expression optional_postfix_expression

   63 $@6: %empty

   64 postfix_expression: primary_expression LPAREN RPAREN $@6 optional_postfix_expression

   65 $@7: %empty

   66 postfix_expression: primary_expression LPAREN function_call_parameter_list RPAREN $@7 optional_postfix_expression

   67 $@8: %empty

   68 optional_postfix_expression: LBRACKET expression RBRACKET $@8 optional_postfix_expression

   69 $@9: %empty

   70 optional_postfix_expression: DOT IDENTIFIER $@9 optional_postfix_expression

   71 $@10: %empty

   72 optional_postfix_expression: PLUSPLUS $@10 optional_postfix_expression

   73 $@11: %empty

   74 optional_postfix_expression: MINUSMINUS $@11 optional_postfix_expression
   75                            | %empty

   76 function_call_parameter_list: assignment_expression

   77 $@12: %empty

   78 function_call_parameter_list: assignment_expression $@12 COMMA function_call_parameter_list

   79 primary_expression: IDENTIFIER
   80                   | constant
   81                   | LPAREN expression RPAREN

   82 constant: INTCONST
   83         | HEXCONST

   84 expression: assignment_expression expression_prime

   85 expression_prime: COMMA assignment_expression expression_prime
   86                 | %empty

   87 assignment_expression: conditional_expression
   88                      | unary_expression EQUALS assignment_expression
   89                      | unary_expression MULEQ assignment_expression
   90                      | unary_expression DIVEQ assignment_expression
   91                      | unary_expression MODEQ assignment_expression
   92                      | unary_expression PLUSEQ assignment_expression
   93                      | unary_expression MINUSEQ assignment_expression
   94                      | unary_expression LSHIFTEQ assignment_expression
   95                      | unary_expression RSHIFTEQ assignment_expression
   96                      | unary_expression ANDEQ assignment_expression
   97                      | unary_expression XOREQ assignment_expression
   98                      | unary_expression OREQ assignment_expression

   99 parameter_type_list: parameter_list

  100 parameter_list: parameter_declaration
  101               | parameter_list COMMA parameter_declaration

  102 parameter_declaration: declaration_specifier direct_declarator
  103                      | declaration_specifier direct_abstract_declarator

  104 direct_abstract_declarator: LPAREN parameter_type_list RPAREN
  105                           | LPAREN parameter_type_list RPAREN direct_abstract_declarator

  106 declaration: declaration_specifier multiple_init_declarators SEMICOLON

  107 init_declarator: direct_declarator EQUALS initializer
  108                | direct_declarator

  109 multiple_init_declarators: init_declarator COMMA multiple_init_declarators
  110                          | init_declarator

  111 initializer: assignment_expression

  112 $@13: %empty

  113 initializer: LBRACE $@13 RBRACE

  114 $@14: %empty

  115 initializer: LBRACE $@14 initializer_list RBRACE

  116 initializer_list: initializer
  117                 | initializer_list COMMA initializer

  118 $@15: %empty

  119 compound_statement: LBRACE $@15 multiple_statements RBRACE
  120                   | LBRACE RBRACE

  121 statement: basic_statement
  122          | labeled_statement
  123          | compound_statement
  124          | selection_statement
  125          | iteration_statement
  126          | jump_statement

  127 basic_statement: declaration
  128                | expression_statement

  129 multiple_statements: multiple_statements statement
  130                    | statement

  131 $@16: %empty

  132 labeled_statement: CASE constant_expression COLON $@16 statement

  133 $@17: %empty

  134 labeled_statement: DEFAULT COLON $@17 statement

  135 expression_statement: SEMICOLON
  136                     | expression SEMICOLON

  137 $@18: %empty

  138 selection_statement: IF LPAREN expression RPAREN $@18 selection_rest

  139 $@19: %empty

  140 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@19 multiple_statements RBRACE

  141 $@20: %empty

  142 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@20 RBRACE

  143 $@21: %empty

  144 selection_rest: statement ELSE $@21 statement
  145               | statement

  146 $@22: %empty

  147 $@23: %empty

  148 iteration_statement: WHILE $@22 LPAREN expression RPAREN $@23 statement

  149 $@24: %empty

  150 $@25: %empty

  151 iteration_statement: DO $@24 statement WHILE LPAREN expression RPAREN $@25 SEMICOLON

  152 $@26: %empty

  153 iteration_statement: for_loop LPAREN basic_statement SEMICOLON RPAREN $@26 statement

  154 $@27: %empty

  155 iteration_statement: for_loop LPAREN basic_statement SEMICOLON expression RPAREN $@27 statement

  156 $@28: %empty

  157 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON RPAREN $@28 statement

  158 $@29: %empty

  159 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON expression RPAREN $@29 statement

  160 for_loop: FOR

  161 jump_statement: CONTINUE SEMICOLON
  162               | BREAK SEMICOLON
  163               | RETURN expression SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SYMBOL (258)
    SEMICOLON (259) 4 14 106 135 136 151 153 155 157 159 161 162 163
    COLON (260) 26 132 134
    COMMA (261) 18 78 85 101 109 117
    DOT (262) 70
    QMARK (263) 26
    BANG (264) 61
    TILDE (265) 60
    LBRACE (266) 4 113 115 119 120 140 142
    RBRACE (267) 4 113 115 119 120 140 142
    LPAREN (268) 8 10 64 66 81 104 105 138 140 142 148 151 153 155 157 159
    RPAREN (269) 8 10 64 66 81 104 105 138 140 142 148 151 153 155 157 159
    LBRACKET (270) 23 68
    RBRACKET (271) 23 68
    EQUALS (272) 88 107
    NOTEQ (273) 39
    EQEQ (274) 38
    LTHAN (275) 41
    LTHANEQ (276) 43
    GTHAN (277) 42
    GTHANEQ (278) 44
    ANDAND (279) 30
    AND (280) 36
    ANDEQ (281) 96
    LSHIFT (282) 46
    LSHIFTEQ (283) 94
    RSHIFT (284) 47
    RSHIFTEQ (285) 95
    OROR (286) 28
    OR (287) 32
    OREQ (288) 98
    XOR (289) 34
    XOREQ (290) 97
    PLUSPLUS (291) 57 72
    PLUS (292) 49
    PLUSEQ (293) 92
    MINUSMINUS (294) 58 74
    MINUS (295) 50 59
    MINUSEQ (296) 93
    MUL (297) 52
    MULEQ (298) 89
    DIV (299) 53
    DIVEQ (300) 90
    MOD (301) 54
    MODEQ (302) 91
    FOR (303) 160
    DO (304) 151
    WHILE (305) 148 151
    CONTINUE (306) 161
    BREAK (307) 162
    SWITCH (308) 140 142
    CASE (309) 132
    IF (310) 138
    ELSE (311) 144
    GOTO (312)
    RETURN (313) 163
    AUTO (314)
    CONST (315) 13
    DEFAULT (316) 134
    EXTERN (317)
    REGISTER (318)
    STATIC (319)
    TYPEDEF (320)
    SIZEOF (321)
    VOLATILE (322)
    SIGNED (323)
    UNSIGNED (324)
    LONG (325)
    SHORT (326)
    VOID (327)
    BOOL (328)
    CHAR (329)
    INT (330)
    FLOAT (331)
    DOUBLE (332)
    STRUCT (333) 4
    IDENTIFIER <std::string> (334) 4 8 10 12 13 20 70 79
    INTCONST <std::string> (335) 82
    HEXCONST <std::string> (336) 83
    NOELSE (337)


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    translation_unit (84)
        on left: 1
        on right: 0
    external_declaration (85)
        on left: 2 4
        on right: 5 6
    $@1 (86)
        on left: 3
        on right: 4
    multiple_external_declarations (87)
        on left: 5 6
        on right: 1 6
    function_definition (88)
        on left: 8 10
        on right: 2
    $@2 (89)
        on left: 7
        on right: 8
    $@3 (90)
        on left: 9
        on right: 10
    declaration_specifier (91)
        on left: 11
        on right: 8 10 14 102 103 106
    type_specifier (92)
        on left: 12 13
        on right: 11
    struct_declaration (93)
        on left: 14
        on right: 15 16
    multiple_struct_declarations (94)
        on left: 15 16
        on right: 4 15
    struct_declarator_list (95)
        on left: 17 18
        on right: 14 18
    direct_declarator (96)
        on left: 20
        on right: 17 18 102 107 108
    $@4 (97)
        on left: 19
        on right: 20
    direct_declarator_prime (98)
        on left: 21 23
        on right: 20 23
    $@5 (99)
        on left: 22
        on right: 23
    constant_expression (100)
        on left: 24
        on right: 132
    conditional_expression (101)
        on left: 25 26
        on right: 24 26 87
    logical_or_expression (102)
        on left: 27 28
        on right: 25 26 28
    logical_and_expression (103)
        on left: 29 30
        on right: 27 28 30
    inclusive_or_expression (104)
        on left: 31 32
        on right: 29 30 32
    exclusive_or_expression (105)
        on left: 33 34
        on right: 31 32 34
    and_expression (106)
        on left: 35 36
        on right: 33 34 36
    equality_expression (107)
        on left: 37 38 39
        on right: 35 36 38 39
    relational_expression (108)
        on left: 40 41 42 43 44
        on right: 37 38 39 41 42 43 44
    shift_expression (109)
        on left: 45 46 47
        on right: 40 41 42 43 44 46 47
    additive_expression (110)
        on left: 48 49 50
        on right: 45 46 47 49 50
    multiplicative_expression (111)
        on left: 51 52 53 54
        on right: 48 49 50 52 53 54
    cast_expression (112)
        on left: 55
        on right: 51 52 53 54 59 60 61
    unary_expression (113)
        on left: 56 57 58 59 60 61
        on right: 55 57 58 88 89 90 91 92 93 94 95 96 97 98
    postfix_expression (114)
        on left: 62 64 66
        on right: 56
    $@6 (115)
        on left: 63
        on right: 64
    $@7 (116)
        on left: 65
        on right: 66
    optional_postfix_expression (117)
        on left: 68 70 72 74 75
        on right: 62 64 66 68 70 72 74
    $@8 (118)
        on left: 67
        on right: 68
    $@9 (119)
        on left: 69
        on right: 70
    $@10 (120)
        on left: 71
        on right: 72
    $@11 (121)
        on left: 73
        on right: 74
    function_call_parameter_list (122)
        on left: 76 78
        on right: 66 78
    $@12 (123)
        on left: 77
        on right: 78
    primary_expression (124)
        on left: 79 80 81
        on right: 62 64 66
    constant (125)
        on left: 82 83
        on right: 80
    expression (126)
        on left: 84
        on right: 23 26 68 81 136 138 140 142 148 151 155 157 159 163
    expression_prime (127)
        on left: 85 86
        on right: 84 85
    assignment_expression (128)
        on left: 87 88 89 90 91 92 93 94 95 96 97 98
        on right: 76 78 84 85 88 89 90 91 92 93 94 95 96 97 98 111
    parameter_type_list (129)
        on left: 99
        on right: 104 105
    parameter_list (130)
        on left: 100 101
        on right: 8 99 101
    parameter_declaration (131)
        on left: 102 103
        on right: 100 101
    direct_abstract_declarator (132)
        on left: 104 105
        on right: 103 105
    declaration (133)
        on left: 106
        on right: 127
    init_declarator (134)
        on left: 107 108
        on right: 109 110
    multiple_init_declarators (135)
        on left: 109 110
        on right: 106 109
    initializer (136)
        on left: 111 113 115
        on right: 107 116 117
    $@13 (137)
        on left: 112
        on right: 113
    $@14 (138)
        on left: 114
        on right: 115
    initializer_list (139)
        on left: 116 117
        on right: 115 117
    compound_statement (140)
        on left: 119 120
        on right: 8 10 123
    $@15 (141)
        on left: 118
        on right: 119
    statement (142)
        on left: 121 122 123 124 125 126
        on right: 129 130 132 134 144 145 148 151 153 155 157 159
    basic_statement (143)
        on left: 127 128
        on right: 121 153 155 157 159
    multiple_statements (144)
        on left: 129 130
        on right: 119 129 140
    labeled_statement (145)
        on left: 132 134
        on right: 122
    $@16 (146)
        on left: 131
        on right: 132
    $@17 (147)
        on left: 133
        on right: 134
    expression_statement (148)
        on left: 135 136
        on right: 128
    selection_statement (149)
        on left: 138 140 142
        on right: 124
    $@18 (150)
        on left: 137
        on right: 138
    $@19 (151)
        on left: 139
        on right: 140
    $@20 (152)
        on left: 141
        on right: 142
    selection_rest (153)
        on left: 144 145
        on right: 138
    $@21 (154)
        on left: 143
        on right: 144
    iteration_statement (155)
        on left: 148 151 153 155 157 159
        on right: 125
    $@22 (156)
        on left: 146
        on right: 148
    $@23 (157)
        on left: 147
        on right: 148
    $@24 (158)
        on left: 149
        on right: 151
    $@25 (159)
        on left: 150
        on right: 151
    $@26 (160)
        on left: 152
        on right: 153
    $@27 (161)
        on left: 154
        on right: 155
    $@28 (162)
        on left: 156
        on right: 157
    $@29 (163)
        on left: 158
        on right: 159
    for_loop (164)
        on left: 160
        on right: 153 155 157 159
    jump_statement (165)
        on left: 161 162 163
        on right: 126


State 0

    0 $accept: . translation_unit $end

    CONST       shift, and go to state 1
    STRUCT      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    translation_unit                go to state 4
    external_declaration            go to state 5
    multiple_external_declarations  go to state 6
    function_definition             go to state 7
    declaration_specifier           go to state 8
    type_specifier                  go to state 9


State 1

   13 type_specifier: CONST . IDENTIFIER

    IDENTIFIER  shift, and go to state 10


State 2

    4 external_declaration: STRUCT . IDENTIFIER $@1 LBRACE multiple_struct_declarations RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 11


State 3

   12 type_specifier: IDENTIFIER .

    $default  reduce using rule 12 (type_specifier)


State 4

    0 $accept: translation_unit . $end

    $end  shift, and go to state 12


State 5

    5 multiple_external_declarations: external_declaration .
    6                               | external_declaration . multiple_external_declarations

    CONST       shift, and go to state 1
    STRUCT      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 5 (multiple_external_declarations)

    external_declaration            go to state 5
    multiple_external_declarations  go to state 13
    function_definition             go to state 7
    declaration_specifier           go to state 8
    type_specifier                  go to state 9


State 6

    1 translation_unit: multiple_external_declarations .

    $default  reduce using rule 1 (translation_unit)


State 7

    2 external_declaration: function_definition .

    $default  reduce using rule 2 (external_declaration)


State 8

    8 function_definition: declaration_specifier . IDENTIFIER LPAREN parameter_list RPAREN $@2 compound_statement
   10                    | declaration_specifier . IDENTIFIER LPAREN RPAREN $@3 compound_statement

    IDENTIFIER  shift, and go to state 14


State 9

   11 declaration_specifier: type_specifier .

    $default  reduce using rule 11 (declaration_specifier)


State 10

   13 type_specifier: CONST IDENTIFIER .

    $default  reduce using rule 13 (type_specifier)


State 11

    4 external_declaration: STRUCT IDENTIFIER . $@1 LBRACE multiple_struct_declarations RBRACE SEMICOLON

    $default  reduce using rule 3 ($@1)

    $@1  go to state 15


State 12

    0 $accept: translation_unit $end .

    $default  accept


State 13

    6 multiple_external_declarations: external_declaration multiple_external_declarations .

    $default  reduce using rule 6 (multiple_external_declarations)


State 14

    8 function_definition: declaration_specifier IDENTIFIER . LPAREN parameter_list RPAREN $@2 compound_statement
   10                    | declaration_specifier IDENTIFIER . LPAREN RPAREN $@3 compound_statement

    LPAREN  shift, and go to state 16


State 15

    4 external_declaration: STRUCT IDENTIFIER $@1 . LBRACE multiple_struct_declarations RBRACE SEMICOLON

    LBRACE  shift, and go to state 17


State 16

    8 function_definition: declaration_specifier IDENTIFIER LPAREN . parameter_list RPAREN $@2 compound_statement
   10                    | declaration_specifier IDENTIFIER LPAREN . RPAREN $@3 compound_statement

    RPAREN      shift, and go to state 18
    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 3

    declaration_specifier  go to state 19
    type_specifier         go to state 9
    parameter_list         go to state 20
    parameter_declaration  go to state 21


State 17

    4 external_declaration: STRUCT IDENTIFIER $@1 LBRACE . multiple_struct_declarations RBRACE SEMICOLON

    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 3

    declaration_specifier         go to state 22
    type_specifier                go to state 9
    struct_declaration            go to state 23
    multiple_struct_declarations  go to state 24


State 18

   10 function_definition: declaration_specifier IDENTIFIER LPAREN RPAREN . $@3 compound_statement

    $default  reduce using rule 9 ($@3)

    $@3  go to state 25


State 19

  102 parameter_declaration: declaration_specifier . direct_declarator
  103                      | declaration_specifier . direct_abstract_declarator

    LPAREN      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    direct_declarator           go to state 28
    direct_abstract_declarator  go to state 29


State 20

    8 function_definition: declaration_specifier IDENTIFIER LPAREN parameter_list . RPAREN $@2 compound_statement
  101 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA   shift, and go to state 30
    RPAREN  shift, and go to state 31


State 21

  100 parameter_list: parameter_declaration .

    $default  reduce using rule 100 (parameter_list)


State 22

   14 struct_declaration: declaration_specifier . struct_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 27

    struct_declarator_list  go to state 32
    direct_declarator       go to state 33


State 23

   15 multiple_struct_declarations: struct_declaration . multiple_struct_declarations
   16                             | struct_declaration .

    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 16 (multiple_struct_declarations)

    declaration_specifier         go to state 22
    type_specifier                go to state 9
    struct_declaration            go to state 23
    multiple_struct_declarations  go to state 34


State 24

    4 external_declaration: STRUCT IDENTIFIER $@1 LBRACE multiple_struct_declarations . RBRACE SEMICOLON

    RBRACE  shift, and go to state 35


State 25

   10 function_definition: declaration_specifier IDENTIFIER LPAREN RPAREN $@3 . compound_statement

    LBRACE  shift, and go to state 36

    compound_statement  go to state 37


State 26

  104 direct_abstract_declarator: LPAREN . parameter_type_list RPAREN
  105                           | LPAREN . parameter_type_list RPAREN direct_abstract_declarator

    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 3

    declaration_specifier  go to state 19
    type_specifier         go to state 9
    parameter_type_list    go to state 38
    parameter_list         go to state 39
    parameter_declaration  go to state 21


State 27

   20 direct_declarator: IDENTIFIER . $@4 direct_declarator_prime

    $default  reduce using rule 19 ($@4)

    $@4  go to state 40


State 28

  102 parameter_declaration: declaration_specifier direct_declarator .

    $default  reduce using rule 102 (parameter_declaration)


State 29

  103 parameter_declaration: declaration_specifier direct_abstract_declarator .

    $default  reduce using rule 103 (parameter_declaration)


State 30

  101 parameter_list: parameter_list COMMA . parameter_declaration

    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 3

    declaration_specifier  go to state 19
    type_specifier         go to state 9
    parameter_declaration  go to state 41


State 31

    8 function_definition: declaration_specifier IDENTIFIER LPAREN parameter_list RPAREN . $@2 compound_statement

    $default  reduce using rule 7 ($@2)

    $@2  go to state 42


State 32

   14 struct_declaration: declaration_specifier struct_declarator_list . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 33

   17 struct_declarator_list: direct_declarator .
   18                       | direct_declarator . COMMA struct_declarator_list

    COMMA  shift, and go to state 44

    $default  reduce using rule 17 (struct_declarator_list)


State 34

   15 multiple_struct_declarations: struct_declaration multiple_struct_declarations .

    $default  reduce using rule 15 (multiple_struct_declarations)


State 35

    4 external_declaration: STRUCT IDENTIFIER $@1 LBRACE multiple_struct_declarations RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 36

  119 compound_statement: LBRACE . $@15 multiple_statements RBRACE
  120                   | LBRACE . RBRACE

    RBRACE  shift, and go to state 46

    $default  reduce using rule 118 ($@15)

    $@15  go to state 47


State 37

   10 function_definition: declaration_specifier IDENTIFIER LPAREN RPAREN $@3 compound_statement .

    $default  reduce using rule 10 (function_definition)


State 38

  104 direct_abstract_declarator: LPAREN parameter_type_list . RPAREN
  105                           | LPAREN parameter_type_list . RPAREN direct_abstract_declarator

    RPAREN  shift, and go to state 48


State 39

   99 parameter_type_list: parameter_list .
  101 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 30

    $default  reduce using rule 99 (parameter_type_list)


State 40

   20 direct_declarator: IDENTIFIER $@4 . direct_declarator_prime

    LBRACKET  shift, and go to state 49

    $default  reduce using rule 21 (direct_declarator_prime)

    direct_declarator_prime  go to state 50


State 41

  101 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 101 (parameter_list)


State 42

    8 function_definition: declaration_specifier IDENTIFIER LPAREN parameter_list RPAREN $@2 . compound_statement

    LBRACE  shift, and go to state 36

    compound_statement  go to state 51


State 43

   14 struct_declaration: declaration_specifier struct_declarator_list SEMICOLON .

    $default  reduce using rule 14 (struct_declaration)


State 44

   18 struct_declarator_list: direct_declarator COMMA . struct_declarator_list

    IDENTIFIER  shift, and go to state 27

    struct_declarator_list  go to state 52
    direct_declarator       go to state 33


State 45

    4 external_declaration: STRUCT IDENTIFIER $@1 LBRACE multiple_struct_declarations RBRACE SEMICOLON .

    $default  reduce using rule 4 (external_declaration)


State 46

  120 compound_statement: LBRACE RBRACE .

    $default  reduce using rule 120 (compound_statement)


State 47

  119 compound_statement: LBRACE $@15 . multiple_statements RBRACE

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 94
    basic_statement            go to state 95
    multiple_statements        go to state 96
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 48

  104 direct_abstract_declarator: LPAREN parameter_type_list RPAREN .
  105                           | LPAREN parameter_type_list RPAREN . direct_abstract_declarator

    LPAREN  shift, and go to state 26

    $default  reduce using rule 104 (direct_abstract_declarator)

    direct_abstract_declarator  go to state 103


State 49

   23 direct_declarator_prime: LBRACKET . expression RBRACKET $@5 direct_declarator_prime

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 105
    assignment_expression      go to state 91


State 50

   20 direct_declarator: IDENTIFIER $@4 direct_declarator_prime .

    $default  reduce using rule 20 (direct_declarator)


State 51

    8 function_definition: declaration_specifier IDENTIFIER LPAREN parameter_list RPAREN $@2 compound_statement .

    $default  reduce using rule 8 (function_definition)


State 52

   18 struct_declarator_list: direct_declarator COMMA struct_declarator_list .

    $default  reduce using rule 18 (struct_declarator_list)


State 53

  135 expression_statement: SEMICOLON .

    $default  reduce using rule 135 (expression_statement)


State 54

   61 unary_expression: BANG . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 106
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 55

   60 unary_expression: TILDE . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 108
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 56

   81 primary_expression: LPAREN . expression RPAREN

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 109
    assignment_expression      go to state 91


State 57

   57 unary_expression: PLUSPLUS . unary_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    unary_expression    go to state 110
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 58

   58 unary_expression: MINUSMINUS . unary_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    unary_expression    go to state 111
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 59

   59 unary_expression: MINUS . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 112
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 60

  160 for_loop: FOR .

    $default  reduce using rule 160 (for_loop)


State 61

  151 iteration_statement: DO . $@24 statement WHILE LPAREN expression RPAREN $@25 SEMICOLON

    $default  reduce using rule 149 ($@24)

    $@24  go to state 113


State 62

  148 iteration_statement: WHILE . $@22 LPAREN expression RPAREN $@23 statement

    $default  reduce using rule 146 ($@22)

    $@22  go to state 114


State 63

  161 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 64

  162 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 65

  140 selection_statement: SWITCH . LPAREN expression RPAREN LBRACE $@19 multiple_statements RBRACE
  142                    | SWITCH . LPAREN expression RPAREN LBRACE $@20 RBRACE

    LPAREN  shift, and go to state 117


State 66

  132 labeled_statement: CASE . constant_expression COLON $@16 statement

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    constant_expression        go to state 118
    conditional_expression     go to state 119
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 67

  138 selection_statement: IF . LPAREN expression RPAREN $@18 selection_rest

    LPAREN  shift, and go to state 120


State 68

  163 jump_statement: RETURN . expression SEMICOLON

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 121
    assignment_expression      go to state 91


State 69

  134 labeled_statement: DEFAULT . COLON $@17 statement

    COLON  shift, and go to state 122


State 70

   12 type_specifier: IDENTIFIER .
   79 primary_expression: IDENTIFIER .

    IDENTIFIER  reduce using rule 12 (type_specifier)
    $default    reduce using rule 79 (primary_expression)


State 71

   82 constant: INTCONST .

    $default  reduce using rule 82 (constant)


State 72

   83 constant: HEXCONST .

    $default  reduce using rule 83 (constant)


State 73

  106 declaration: declaration_specifier . multiple_init_declarators SEMICOLON

    IDENTIFIER  shift, and go to state 27

    direct_declarator          go to state 123
    init_declarator            go to state 124
    multiple_init_declarators  go to state 125


State 74

   87 assignment_expression: conditional_expression .

    $default  reduce using rule 87 (assignment_expression)


State 75

   25 conditional_expression: logical_or_expression .
   26                       | logical_or_expression . QMARK expression COLON conditional_expression
   28 logical_or_expression: logical_or_expression . OROR logical_and_expression

    QMARK  shift, and go to state 126
    OROR   shift, and go to state 127

    $default  reduce using rule 25 (conditional_expression)


State 76

   27 logical_or_expression: logical_and_expression .
   30 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression

    ANDAND  shift, and go to state 128

    $default  reduce using rule 27 (logical_or_expression)


State 77

   29 logical_and_expression: inclusive_or_expression .
   32 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression

    OR  shift, and go to state 129

    $default  reduce using rule 29 (logical_and_expression)


State 78

   31 inclusive_or_expression: exclusive_or_expression .
   34 exclusive_or_expression: exclusive_or_expression . XOR and_expression

    XOR  shift, and go to state 130

    $default  reduce using rule 31 (inclusive_or_expression)


State 79

   33 exclusive_or_expression: and_expression .
   36 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 131

    $default  reduce using rule 33 (exclusive_or_expression)


State 80

   35 and_expression: equality_expression .
   38 equality_expression: equality_expression . EQEQ relational_expression
   39                    | equality_expression . NOTEQ relational_expression

    NOTEQ  shift, and go to state 132
    EQEQ   shift, and go to state 133

    $default  reduce using rule 35 (and_expression)


State 81

   37 equality_expression: relational_expression .
   41 relational_expression: relational_expression . LTHAN shift_expression
   42                      | relational_expression . GTHAN shift_expression
   43                      | relational_expression . LTHANEQ shift_expression
   44                      | relational_expression . GTHANEQ shift_expression

    LTHAN    shift, and go to state 134
    LTHANEQ  shift, and go to state 135
    GTHAN    shift, and go to state 136
    GTHANEQ  shift, and go to state 137

    $default  reduce using rule 37 (equality_expression)


State 82

   40 relational_expression: shift_expression .
   46 shift_expression: shift_expression . LSHIFT additive_expression
   47                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 138
    RSHIFT  shift, and go to state 139

    $default  reduce using rule 40 (relational_expression)


State 83

   45 shift_expression: additive_expression .
   49 additive_expression: additive_expression . PLUS multiplicative_expression
   50                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 140
    MINUS  shift, and go to state 141

    $default  reduce using rule 45 (shift_expression)


State 84

   48 additive_expression: multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL cast_expression
   53                          | multiplicative_expression . DIV cast_expression
   54                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 142
    DIV  shift, and go to state 143
    MOD  shift, and go to state 144

    $default  reduce using rule 48 (additive_expression)


State 85

   51 multiplicative_expression: cast_expression .

    $default  reduce using rule 51 (multiplicative_expression)


State 86

   55 cast_expression: unary_expression .
   88 assignment_expression: unary_expression . EQUALS assignment_expression
   89                      | unary_expression . MULEQ assignment_expression
   90                      | unary_expression . DIVEQ assignment_expression
   91                      | unary_expression . MODEQ assignment_expression
   92                      | unary_expression . PLUSEQ assignment_expression
   93                      | unary_expression . MINUSEQ assignment_expression
   94                      | unary_expression . LSHIFTEQ assignment_expression
   95                      | unary_expression . RSHIFTEQ assignment_expression
   96                      | unary_expression . ANDEQ assignment_expression
   97                      | unary_expression . XOREQ assignment_expression
   98                      | unary_expression . OREQ assignment_expression

    EQUALS    shift, and go to state 145
    ANDEQ     shift, and go to state 146
    LSHIFTEQ  shift, and go to state 147
    RSHIFTEQ  shift, and go to state 148
    OREQ      shift, and go to state 149
    XOREQ     shift, and go to state 150
    PLUSEQ    shift, and go to state 151
    MINUSEQ   shift, and go to state 152
    MULEQ     shift, and go to state 153
    DIVEQ     shift, and go to state 154
    MODEQ     shift, and go to state 155

    $default  reduce using rule 55 (cast_expression)


State 87

   56 unary_expression: postfix_expression .

    $default  reduce using rule 56 (unary_expression)


State 88

   62 postfix_expression: primary_expression . optional_postfix_expression
   64                   | primary_expression . LPAREN RPAREN $@6 optional_postfix_expression
   66                   | primary_expression . LPAREN function_call_parameter_list RPAREN $@7 optional_postfix_expression

    DOT         shift, and go to state 156
    LPAREN      shift, and go to state 157
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 161


State 89

   80 primary_expression: constant .

    $default  reduce using rule 80 (primary_expression)


State 90

  136 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 91

   84 expression: assignment_expression . expression_prime

    COMMA  shift, and go to state 163

    $default  reduce using rule 86 (expression_prime)

    expression_prime  go to state 164


State 92

  127 basic_statement: declaration .

    $default  reduce using rule 127 (basic_statement)


State 93

  123 statement: compound_statement .

    $default  reduce using rule 123 (statement)


State 94

  130 multiple_statements: statement .

    $default  reduce using rule 130 (multiple_statements)


State 95

  121 statement: basic_statement .

    $default  reduce using rule 121 (statement)


State 96

  119 compound_statement: LBRACE $@15 multiple_statements . RBRACE
  129 multiple_statements: multiple_statements . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    RBRACE      shift, and go to state 165
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 166
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 97

  122 statement: labeled_statement .

    $default  reduce using rule 122 (statement)


State 98

  128 basic_statement: expression_statement .

    $default  reduce using rule 128 (basic_statement)


State 99

  124 statement: selection_statement .

    $default  reduce using rule 124 (statement)


State 100

  125 statement: iteration_statement .

    $default  reduce using rule 125 (statement)


State 101

  153 iteration_statement: for_loop . LPAREN basic_statement SEMICOLON RPAREN $@26 statement
  155                    | for_loop . LPAREN basic_statement SEMICOLON expression RPAREN $@27 statement
  157                    | for_loop . LPAREN basic_statement expression SEMICOLON RPAREN $@28 statement
  159                    | for_loop . LPAREN basic_statement expression SEMICOLON expression RPAREN $@29 statement

    LPAREN  shift, and go to state 167


State 102

  126 statement: jump_statement .

    $default  reduce using rule 126 (statement)


State 103

  105 direct_abstract_declarator: LPAREN parameter_type_list RPAREN direct_abstract_declarator .

    $default  reduce using rule 105 (direct_abstract_declarator)


State 104

   79 primary_expression: IDENTIFIER .

    $default  reduce using rule 79 (primary_expression)


State 105

   23 direct_declarator_prime: LBRACKET expression . RBRACKET $@5 direct_declarator_prime

    RBRACKET  shift, and go to state 168


State 106

   61 unary_expression: BANG cast_expression .

    $default  reduce using rule 61 (unary_expression)


State 107

   55 cast_expression: unary_expression .

    $default  reduce using rule 55 (cast_expression)


State 108

   60 unary_expression: TILDE cast_expression .

    $default  reduce using rule 60 (unary_expression)


State 109

   81 primary_expression: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 169


State 110

   57 unary_expression: PLUSPLUS unary_expression .

    $default  reduce using rule 57 (unary_expression)


State 111

   58 unary_expression: MINUSMINUS unary_expression .

    $default  reduce using rule 58 (unary_expression)


State 112

   59 unary_expression: MINUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


State 113

  151 iteration_statement: DO $@24 . statement WHILE LPAREN expression RPAREN $@25 SEMICOLON

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 170
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 114

  148 iteration_statement: WHILE $@22 . LPAREN expression RPAREN $@23 statement

    LPAREN  shift, and go to state 171


State 115

  161 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 161 (jump_statement)


State 116

  162 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 162 (jump_statement)


State 117

  140 selection_statement: SWITCH LPAREN . expression RPAREN LBRACE $@19 multiple_statements RBRACE
  142                    | SWITCH LPAREN . expression RPAREN LBRACE $@20 RBRACE

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 172
    assignment_expression      go to state 91


State 118

  132 labeled_statement: CASE constant_expression . COLON $@16 statement

    COLON  shift, and go to state 173


State 119

   24 constant_expression: conditional_expression .

    $default  reduce using rule 24 (constant_expression)


State 120

  138 selection_statement: IF LPAREN . expression RPAREN $@18 selection_rest

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 174
    assignment_expression      go to state 91


State 121

  163 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 122

  134 labeled_statement: DEFAULT COLON . $@17 statement

    $default  reduce using rule 133 ($@17)

    $@17  go to state 176


State 123

  107 init_declarator: direct_declarator . EQUALS initializer
  108                | direct_declarator .

    EQUALS  shift, and go to state 177

    $default  reduce using rule 108 (init_declarator)


State 124

  109 multiple_init_declarators: init_declarator . COMMA multiple_init_declarators
  110                          | init_declarator .

    COMMA  shift, and go to state 178

    $default  reduce using rule 110 (multiple_init_declarators)


State 125

  106 declaration: declaration_specifier multiple_init_declarators . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 126

   26 conditional_expression: logical_or_expression QMARK . expression COLON conditional_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 180
    assignment_expression      go to state 91


State 127

   28 logical_or_expression: logical_or_expression OROR . logical_and_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    logical_and_expression     go to state 181
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 128

   30 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    inclusive_or_expression    go to state 182
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 129

   32 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    exclusive_or_expression    go to state 183
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 130

   34 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    and_expression             go to state 184
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 131

   36 and_expression: and_expression AND . equality_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    equality_expression        go to state 185
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 132

   39 equality_expression: equality_expression NOTEQ . relational_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    relational_expression      go to state 186
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 133

   38 equality_expression: equality_expression EQEQ . relational_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    relational_expression      go to state 187
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 134

   41 relational_expression: relational_expression LTHAN . shift_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    shift_expression           go to state 188
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 135

   43 relational_expression: relational_expression LTHANEQ . shift_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    shift_expression           go to state 189
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 136

   42 relational_expression: relational_expression GTHAN . shift_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    shift_expression           go to state 190
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 137

   44 relational_expression: relational_expression GTHANEQ . shift_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    shift_expression           go to state 191
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 138

   46 shift_expression: shift_expression LSHIFT . additive_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    additive_expression        go to state 192
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 139

   47 shift_expression: shift_expression RSHIFT . additive_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    additive_expression        go to state 193
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 140

   49 additive_expression: additive_expression PLUS . multiplicative_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    multiplicative_expression  go to state 194
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 141

   50 additive_expression: additive_expression MINUS . multiplicative_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    multiplicative_expression  go to state 195
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 142

   52 multiplicative_expression: multiplicative_expression MUL . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 196
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 143

   53 multiplicative_expression: multiplicative_expression DIV . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 197
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 144

   54 multiplicative_expression: multiplicative_expression MOD . cast_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    cast_expression     go to state 198
    unary_expression    go to state 107
    postfix_expression  go to state 87
    primary_expression  go to state 88
    constant            go to state 89


State 145

   88 assignment_expression: unary_expression EQUALS . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 199


State 146

   96 assignment_expression: unary_expression ANDEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 200


State 147

   94 assignment_expression: unary_expression LSHIFTEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 201


State 148

   95 assignment_expression: unary_expression RSHIFTEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 202


State 149

   98 assignment_expression: unary_expression OREQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 203


State 150

   97 assignment_expression: unary_expression XOREQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 204


State 151

   92 assignment_expression: unary_expression PLUSEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 205


State 152

   93 assignment_expression: unary_expression MINUSEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 206


State 153

   89 assignment_expression: unary_expression MULEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 207


State 154

   90 assignment_expression: unary_expression DIVEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 208


State 155

   91 assignment_expression: unary_expression MODEQ . assignment_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 209


State 156

   70 optional_postfix_expression: DOT . IDENTIFIER $@9 optional_postfix_expression

    IDENTIFIER  shift, and go to state 210


State 157

   64 postfix_expression: primary_expression LPAREN . RPAREN $@6 optional_postfix_expression
   66                   | primary_expression LPAREN . function_call_parameter_list RPAREN $@7 optional_postfix_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    RPAREN      shift, and go to state 211
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression        go to state 74
    logical_or_expression         go to state 75
    logical_and_expression        go to state 76
    inclusive_or_expression       go to state 77
    exclusive_or_expression       go to state 78
    and_expression                go to state 79
    equality_expression           go to state 80
    relational_expression         go to state 81
    shift_expression              go to state 82
    additive_expression           go to state 83
    multiplicative_expression     go to state 84
    cast_expression               go to state 85
    unary_expression              go to state 86
    postfix_expression            go to state 87
    function_call_parameter_list  go to state 212
    primary_expression            go to state 88
    constant                      go to state 89
    assignment_expression         go to state 213


State 158

   68 optional_postfix_expression: LBRACKET . expression RBRACKET $@8 optional_postfix_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 214
    assignment_expression      go to state 91


State 159

   72 optional_postfix_expression: PLUSPLUS . $@10 optional_postfix_expression

    $default  reduce using rule 71 ($@10)

    $@10  go to state 215


State 160

   74 optional_postfix_expression: MINUSMINUS . $@11 optional_postfix_expression

    $default  reduce using rule 73 ($@11)

    $@11  go to state 216


State 161

   62 postfix_expression: primary_expression optional_postfix_expression .

    $default  reduce using rule 62 (postfix_expression)


State 162

  136 expression_statement: expression SEMICOLON .

    $default  reduce using rule 136 (expression_statement)


State 163

   85 expression_prime: COMMA . assignment_expression expression_prime

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 217


State 164

   84 expression: assignment_expression expression_prime .

    $default  reduce using rule 84 (expression)


State 165

  119 compound_statement: LBRACE $@15 multiple_statements RBRACE .

    $default  reduce using rule 119 (compound_statement)


State 166

  129 multiple_statements: multiple_statements statement .

    $default  reduce using rule 129 (multiple_statements)


State 167

  153 iteration_statement: for_loop LPAREN . basic_statement SEMICOLON RPAREN $@26 statement
  155                    | for_loop LPAREN . basic_statement SEMICOLON expression RPAREN $@27 statement
  157                    | for_loop LPAREN . basic_statement expression SEMICOLON RPAREN $@28 statement
  159                    | for_loop LPAREN . basic_statement expression SEMICOLON expression RPAREN $@29 statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    CONST       shift, and go to state 1
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    basic_statement            go to state 218
    expression_statement       go to state 98


State 168

   23 direct_declarator_prime: LBRACKET expression RBRACKET . $@5 direct_declarator_prime

    $default  reduce using rule 22 ($@5)

    $@5  go to state 219


State 169

   81 primary_expression: LPAREN expression RPAREN .

    $default  reduce using rule 81 (primary_expression)


State 170

  151 iteration_statement: DO $@24 statement . WHILE LPAREN expression RPAREN $@25 SEMICOLON

    WHILE  shift, and go to state 220


State 171

  148 iteration_statement: WHILE $@22 LPAREN . expression RPAREN $@23 statement

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 221
    assignment_expression      go to state 91


State 172

  140 selection_statement: SWITCH LPAREN expression . RPAREN LBRACE $@19 multiple_statements RBRACE
  142                    | SWITCH LPAREN expression . RPAREN LBRACE $@20 RBRACE

    RPAREN  shift, and go to state 222


State 173

  132 labeled_statement: CASE constant_expression COLON . $@16 statement

    $default  reduce using rule 131 ($@16)

    $@16  go to state 223


State 174

  138 selection_statement: IF LPAREN expression . RPAREN $@18 selection_rest

    RPAREN  shift, and go to state 224


State 175

  163 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 163 (jump_statement)


State 176

  134 labeled_statement: DEFAULT COLON $@17 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 225
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 177

  107 init_declarator: direct_declarator EQUALS . initializer

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 226
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 227
    initializer                go to state 228


State 178

  109 multiple_init_declarators: init_declarator COMMA . multiple_init_declarators

    IDENTIFIER  shift, and go to state 27

    direct_declarator          go to state 123
    init_declarator            go to state 124
    multiple_init_declarators  go to state 229


State 179

  106 declaration: declaration_specifier multiple_init_declarators SEMICOLON .

    $default  reduce using rule 106 (declaration)


State 180

   26 conditional_expression: logical_or_expression QMARK expression . COLON conditional_expression

    COLON  shift, and go to state 230


State 181

   28 logical_or_expression: logical_or_expression OROR logical_and_expression .
   30 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression

    ANDAND  shift, and go to state 128

    $default  reduce using rule 28 (logical_or_expression)


State 182

   30 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .
   32 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression

    OR  shift, and go to state 129

    $default  reduce using rule 30 (logical_and_expression)


State 183

   32 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .
   34 exclusive_or_expression: exclusive_or_expression . XOR and_expression

    XOR  shift, and go to state 130

    $default  reduce using rule 32 (inclusive_or_expression)


State 184

   34 exclusive_or_expression: exclusive_or_expression XOR and_expression .
   36 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 131

    $default  reduce using rule 34 (exclusive_or_expression)


State 185

   36 and_expression: and_expression AND equality_expression .
   38 equality_expression: equality_expression . EQEQ relational_expression
   39                    | equality_expression . NOTEQ relational_expression

    NOTEQ  shift, and go to state 132
    EQEQ   shift, and go to state 133

    $default  reduce using rule 36 (and_expression)


State 186

   39 equality_expression: equality_expression NOTEQ relational_expression .
   41 relational_expression: relational_expression . LTHAN shift_expression
   42                      | relational_expression . GTHAN shift_expression
   43                      | relational_expression . LTHANEQ shift_expression
   44                      | relational_expression . GTHANEQ shift_expression

    LTHAN    shift, and go to state 134
    LTHANEQ  shift, and go to state 135
    GTHAN    shift, and go to state 136
    GTHANEQ  shift, and go to state 137

    $default  reduce using rule 39 (equality_expression)


State 187

   38 equality_expression: equality_expression EQEQ relational_expression .
   41 relational_expression: relational_expression . LTHAN shift_expression
   42                      | relational_expression . GTHAN shift_expression
   43                      | relational_expression . LTHANEQ shift_expression
   44                      | relational_expression . GTHANEQ shift_expression

    LTHAN    shift, and go to state 134
    LTHANEQ  shift, and go to state 135
    GTHAN    shift, and go to state 136
    GTHANEQ  shift, and go to state 137

    $default  reduce using rule 38 (equality_expression)


State 188

   41 relational_expression: relational_expression LTHAN shift_expression .
   46 shift_expression: shift_expression . LSHIFT additive_expression
   47                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 138
    RSHIFT  shift, and go to state 139

    $default  reduce using rule 41 (relational_expression)


State 189

   43 relational_expression: relational_expression LTHANEQ shift_expression .
   46 shift_expression: shift_expression . LSHIFT additive_expression
   47                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 138
    RSHIFT  shift, and go to state 139

    $default  reduce using rule 43 (relational_expression)


State 190

   42 relational_expression: relational_expression GTHAN shift_expression .
   46 shift_expression: shift_expression . LSHIFT additive_expression
   47                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 138
    RSHIFT  shift, and go to state 139

    $default  reduce using rule 42 (relational_expression)


State 191

   44 relational_expression: relational_expression GTHANEQ shift_expression .
   46 shift_expression: shift_expression . LSHIFT additive_expression
   47                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 138
    RSHIFT  shift, and go to state 139

    $default  reduce using rule 44 (relational_expression)


State 192

   46 shift_expression: shift_expression LSHIFT additive_expression .
   49 additive_expression: additive_expression . PLUS multiplicative_expression
   50                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 140
    MINUS  shift, and go to state 141

    $default  reduce using rule 46 (shift_expression)


State 193

   47 shift_expression: shift_expression RSHIFT additive_expression .
   49 additive_expression: additive_expression . PLUS multiplicative_expression
   50                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 140
    MINUS  shift, and go to state 141

    $default  reduce using rule 47 (shift_expression)


State 194

   49 additive_expression: additive_expression PLUS multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL cast_expression
   53                          | multiplicative_expression . DIV cast_expression
   54                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 142
    DIV  shift, and go to state 143
    MOD  shift, and go to state 144

    $default  reduce using rule 49 (additive_expression)


State 195

   50 additive_expression: additive_expression MINUS multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL cast_expression
   53                          | multiplicative_expression . DIV cast_expression
   54                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 142
    DIV  shift, and go to state 143
    MOD  shift, and go to state 144

    $default  reduce using rule 50 (additive_expression)


State 196

   52 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 52 (multiplicative_expression)


State 197

   53 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 53 (multiplicative_expression)


State 198

   54 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 199

   88 assignment_expression: unary_expression EQUALS assignment_expression .

    $default  reduce using rule 88 (assignment_expression)


State 200

   96 assignment_expression: unary_expression ANDEQ assignment_expression .

    $default  reduce using rule 96 (assignment_expression)


State 201

   94 assignment_expression: unary_expression LSHIFTEQ assignment_expression .

    $default  reduce using rule 94 (assignment_expression)


State 202

   95 assignment_expression: unary_expression RSHIFTEQ assignment_expression .

    $default  reduce using rule 95 (assignment_expression)


State 203

   98 assignment_expression: unary_expression OREQ assignment_expression .

    $default  reduce using rule 98 (assignment_expression)


State 204

   97 assignment_expression: unary_expression XOREQ assignment_expression .

    $default  reduce using rule 97 (assignment_expression)


State 205

   92 assignment_expression: unary_expression PLUSEQ assignment_expression .

    $default  reduce using rule 92 (assignment_expression)


State 206

   93 assignment_expression: unary_expression MINUSEQ assignment_expression .

    $default  reduce using rule 93 (assignment_expression)


State 207

   89 assignment_expression: unary_expression MULEQ assignment_expression .

    $default  reduce using rule 89 (assignment_expression)


State 208

   90 assignment_expression: unary_expression DIVEQ assignment_expression .

    $default  reduce using rule 90 (assignment_expression)


State 209

   91 assignment_expression: unary_expression MODEQ assignment_expression .

    $default  reduce using rule 91 (assignment_expression)


State 210

   70 optional_postfix_expression: DOT IDENTIFIER . $@9 optional_postfix_expression

    $default  reduce using rule 69 ($@9)

    $@9  go to state 231


State 211

   64 postfix_expression: primary_expression LPAREN RPAREN . $@6 optional_postfix_expression

    $default  reduce using rule 63 ($@6)

    $@6  go to state 232


State 212

   66 postfix_expression: primary_expression LPAREN function_call_parameter_list . RPAREN $@7 optional_postfix_expression

    RPAREN  shift, and go to state 233


State 213

   76 function_call_parameter_list: assignment_expression .
   78                             | assignment_expression . $@12 COMMA function_call_parameter_list

    COMMA     reduce using rule 77 ($@12)
    $default  reduce using rule 76 (function_call_parameter_list)

    $@12  go to state 234


State 214

   68 optional_postfix_expression: LBRACKET expression . RBRACKET $@8 optional_postfix_expression

    RBRACKET  shift, and go to state 235


State 215

   72 optional_postfix_expression: PLUSPLUS $@10 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 236


State 216

   74 optional_postfix_expression: MINUSMINUS $@11 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 237


State 217

   85 expression_prime: COMMA assignment_expression . expression_prime

    COMMA  shift, and go to state 163

    $default  reduce using rule 86 (expression_prime)

    expression_prime  go to state 238


State 218

  153 iteration_statement: for_loop LPAREN basic_statement . SEMICOLON RPAREN $@26 statement
  155                    | for_loop LPAREN basic_statement . SEMICOLON expression RPAREN $@27 statement
  157                    | for_loop LPAREN basic_statement . expression SEMICOLON RPAREN $@28 statement
  159                    | for_loop LPAREN basic_statement . expression SEMICOLON expression RPAREN $@29 statement

    SEMICOLON   shift, and go to state 239
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 240
    assignment_expression      go to state 91


State 219

   23 direct_declarator_prime: LBRACKET expression RBRACKET $@5 . direct_declarator_prime

    LBRACKET  shift, and go to state 49

    $default  reduce using rule 21 (direct_declarator_prime)

    direct_declarator_prime  go to state 241


State 220

  151 iteration_statement: DO $@24 statement WHILE . LPAREN expression RPAREN $@25 SEMICOLON

    LPAREN  shift, and go to state 242


State 221

  148 iteration_statement: WHILE $@22 LPAREN expression . RPAREN $@23 statement

    RPAREN  shift, and go to state 243


State 222

  140 selection_statement: SWITCH LPAREN expression RPAREN . LBRACE $@19 multiple_statements RBRACE
  142                    | SWITCH LPAREN expression RPAREN . LBRACE $@20 RBRACE

    LBRACE  shift, and go to state 244


State 223

  132 labeled_statement: CASE constant_expression COLON $@16 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 245
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 224

  138 selection_statement: IF LPAREN expression RPAREN . $@18 selection_rest

    $default  reduce using rule 137 ($@18)

    $@18  go to state 246


State 225

  134 labeled_statement: DEFAULT COLON $@17 statement .

    $default  reduce using rule 134 (labeled_statement)


State 226

  113 initializer: LBRACE . $@13 RBRACE
  115            | LBRACE . $@14 initializer_list RBRACE

    RBRACE    reduce using rule 112 ($@13)
    $default  reduce using rule 114 ($@14)

    $@13  go to state 247
    $@14  go to state 248


State 227

  111 initializer: assignment_expression .

    $default  reduce using rule 111 (initializer)


State 228

  107 init_declarator: direct_declarator EQUALS initializer .

    $default  reduce using rule 107 (init_declarator)


State 229

  109 multiple_init_declarators: init_declarator COMMA multiple_init_declarators .

    $default  reduce using rule 109 (multiple_init_declarators)


State 230

   26 conditional_expression: logical_or_expression QMARK expression COLON . conditional_expression

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 249
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 107
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89


State 231

   70 optional_postfix_expression: DOT IDENTIFIER $@9 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 250


State 232

   64 postfix_expression: primary_expression LPAREN RPAREN $@6 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 251


State 233

   66 postfix_expression: primary_expression LPAREN function_call_parameter_list RPAREN . $@7 optional_postfix_expression

    $default  reduce using rule 65 ($@7)

    $@7  go to state 252


State 234

   78 function_call_parameter_list: assignment_expression $@12 . COMMA function_call_parameter_list

    COMMA  shift, and go to state 253


State 235

   68 optional_postfix_expression: LBRACKET expression RBRACKET . $@8 optional_postfix_expression

    $default  reduce using rule 67 ($@8)

    $@8  go to state 254


State 236

   72 optional_postfix_expression: PLUSPLUS $@10 optional_postfix_expression .

    $default  reduce using rule 72 (optional_postfix_expression)


State 237

   74 optional_postfix_expression: MINUSMINUS $@11 optional_postfix_expression .

    $default  reduce using rule 74 (optional_postfix_expression)


State 238

   85 expression_prime: COMMA assignment_expression expression_prime .

    $default  reduce using rule 85 (expression_prime)


State 239

  153 iteration_statement: for_loop LPAREN basic_statement SEMICOLON . RPAREN $@26 statement
  155                    | for_loop LPAREN basic_statement SEMICOLON . expression RPAREN $@27 statement

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    RPAREN      shift, and go to state 255
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 256
    assignment_expression      go to state 91


State 240

  157 iteration_statement: for_loop LPAREN basic_statement expression . SEMICOLON RPAREN $@28 statement
  159                    | for_loop LPAREN basic_statement expression . SEMICOLON expression RPAREN $@29 statement

    SEMICOLON  shift, and go to state 257


State 241

   23 direct_declarator_prime: LBRACKET expression RBRACKET $@5 direct_declarator_prime .

    $default  reduce using rule 23 (direct_declarator_prime)


State 242

  151 iteration_statement: DO $@24 statement WHILE LPAREN . expression RPAREN $@25 SEMICOLON

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 258
    assignment_expression      go to state 91


State 243

  148 iteration_statement: WHILE $@22 LPAREN expression RPAREN . $@23 statement

    $default  reduce using rule 147 ($@23)

    $@23  go to state 259


State 244

  140 selection_statement: SWITCH LPAREN expression RPAREN LBRACE . $@19 multiple_statements RBRACE
  142                    | SWITCH LPAREN expression RPAREN LBRACE . $@20 RBRACE

    RBRACE    reduce using rule 141 ($@20)
    $default  reduce using rule 139 ($@19)

    $@19  go to state 260
    $@20  go to state 261


State 245

  132 labeled_statement: CASE constant_expression COLON $@16 statement .

    $default  reduce using rule 132 (labeled_statement)


State 246

  138 selection_statement: IF LPAREN expression RPAREN $@18 . selection_rest

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 262
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    selection_rest             go to state 263
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 247

  113 initializer: LBRACE $@13 . RBRACE

    RBRACE  shift, and go to state 264


State 248

  115 initializer: LBRACE $@14 . initializer_list RBRACE

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 226
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 227
    initializer                go to state 265
    initializer_list           go to state 266


State 249

   26 conditional_expression: logical_or_expression QMARK expression COLON conditional_expression .

    $default  reduce using rule 26 (conditional_expression)


State 250

   70 optional_postfix_expression: DOT IDENTIFIER $@9 optional_postfix_expression .

    $default  reduce using rule 70 (optional_postfix_expression)


State 251

   64 postfix_expression: primary_expression LPAREN RPAREN $@6 optional_postfix_expression .

    $default  reduce using rule 64 (postfix_expression)


State 252

   66 postfix_expression: primary_expression LPAREN function_call_parameter_list RPAREN $@7 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 267


State 253

   78 function_call_parameter_list: assignment_expression $@12 COMMA . function_call_parameter_list

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression        go to state 74
    logical_or_expression         go to state 75
    logical_and_expression        go to state 76
    inclusive_or_expression       go to state 77
    exclusive_or_expression       go to state 78
    and_expression                go to state 79
    equality_expression           go to state 80
    relational_expression         go to state 81
    shift_expression              go to state 82
    additive_expression           go to state 83
    multiplicative_expression     go to state 84
    cast_expression               go to state 85
    unary_expression              go to state 86
    postfix_expression            go to state 87
    function_call_parameter_list  go to state 268
    primary_expression            go to state 88
    constant                      go to state 89
    assignment_expression         go to state 213


State 254

   68 optional_postfix_expression: LBRACKET expression RBRACKET $@8 . optional_postfix_expression

    DOT         shift, and go to state 156
    LBRACKET    shift, and go to state 158
    PLUSPLUS    shift, and go to state 159
    MINUSMINUS  shift, and go to state 160

    $default  reduce using rule 75 (optional_postfix_expression)

    optional_postfix_expression  go to state 269


State 255

  153 iteration_statement: for_loop LPAREN basic_statement SEMICOLON RPAREN . $@26 statement

    $default  reduce using rule 152 ($@26)

    $@26  go to state 270


State 256

  155 iteration_statement: for_loop LPAREN basic_statement SEMICOLON expression . RPAREN $@27 statement

    RPAREN  shift, and go to state 271


State 257

  157 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON . RPAREN $@28 statement
  159                    | for_loop LPAREN basic_statement expression SEMICOLON . expression RPAREN $@29 statement

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LPAREN      shift, and go to state 56
    RPAREN      shift, and go to state 272
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 273
    assignment_expression      go to state 91


State 258

  151 iteration_statement: DO $@24 statement WHILE LPAREN expression . RPAREN $@25 SEMICOLON

    RPAREN  shift, and go to state 274


State 259

  148 iteration_statement: WHILE $@22 LPAREN expression RPAREN $@23 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 275
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 260

  140 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@19 . multiple_statements RBRACE

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 94
    basic_statement            go to state 95
    multiple_statements        go to state 276
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 261

  142 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@20 . RBRACE

    RBRACE  shift, and go to state 277


State 262

  144 selection_rest: statement . ELSE $@21 statement
  145               | statement .

    ELSE  shift, and go to state 278

    $default  reduce using rule 145 (selection_rest)


State 263

  138 selection_statement: IF LPAREN expression RPAREN $@18 selection_rest .

    $default  reduce using rule 138 (selection_statement)


State 264

  113 initializer: LBRACE $@13 RBRACE .

    $default  reduce using rule 113 (initializer)


State 265

  116 initializer_list: initializer .

    $default  reduce using rule 116 (initializer_list)


State 266

  115 initializer: LBRACE $@14 initializer_list . RBRACE
  117 initializer_list: initializer_list . COMMA initializer

    COMMA   shift, and go to state 279
    RBRACE  shift, and go to state 280


State 267

   66 postfix_expression: primary_expression LPAREN function_call_parameter_list RPAREN $@7 optional_postfix_expression .

    $default  reduce using rule 66 (postfix_expression)


State 268

   78 function_call_parameter_list: assignment_expression $@12 COMMA function_call_parameter_list .

    $default  reduce using rule 78 (function_call_parameter_list)


State 269

   68 optional_postfix_expression: LBRACKET expression RBRACKET $@8 optional_postfix_expression .

    $default  reduce using rule 68 (optional_postfix_expression)


State 270

  153 iteration_statement: for_loop LPAREN basic_statement SEMICOLON RPAREN $@26 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 281
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 271

  155 iteration_statement: for_loop LPAREN basic_statement SEMICOLON expression RPAREN . $@27 statement

    $default  reduce using rule 154 ($@27)

    $@27  go to state 282


State 272

  157 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON RPAREN . $@28 statement

    $default  reduce using rule 156 ($@28)

    $@28  go to state 283


State 273

  159 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON expression . RPAREN $@29 statement

    RPAREN  shift, and go to state 284


State 274

  151 iteration_statement: DO $@24 statement WHILE LPAREN expression RPAREN . $@25 SEMICOLON

    $default  reduce using rule 150 ($@25)

    $@25  go to state 285


State 275

  148 iteration_statement: WHILE $@22 LPAREN expression RPAREN $@23 statement .

    $default  reduce using rule 148 (iteration_statement)


State 276

  129 multiple_statements: multiple_statements . statement
  140 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@19 multiple_statements . RBRACE

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    RBRACE      shift, and go to state 286
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 166
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 277

  142 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@20 RBRACE .

    $default  reduce using rule 142 (selection_statement)


State 278

  144 selection_rest: statement ELSE . $@21 statement

    $default  reduce using rule 143 ($@21)

    $@21  go to state 287


State 279

  117 initializer_list: initializer_list COMMA . initializer

    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 226
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    IDENTIFIER  shift, and go to state 104
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    assignment_expression      go to state 227
    initializer                go to state 288


State 280

  115 initializer: LBRACE $@14 initializer_list RBRACE .

    $default  reduce using rule 115 (initializer)


State 281

  153 iteration_statement: for_loop LPAREN basic_statement SEMICOLON RPAREN $@26 statement .

    $default  reduce using rule 153 (iteration_statement)


State 282

  155 iteration_statement: for_loop LPAREN basic_statement SEMICOLON expression RPAREN $@27 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 289
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 283

  157 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON RPAREN $@28 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 290
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 284

  159 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON expression RPAREN . $@29 statement

    $default  reduce using rule 158 ($@29)

    $@29  go to state 291


State 285

  151 iteration_statement: DO $@24 statement WHILE LPAREN expression RPAREN $@25 . SEMICOLON

    SEMICOLON  shift, and go to state 292


State 286

  140 selection_statement: SWITCH LPAREN expression RPAREN LBRACE $@19 multiple_statements RBRACE .

    $default  reduce using rule 140 (selection_statement)


State 287

  144 selection_rest: statement ELSE $@21 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 293
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 288

  117 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 117 (initializer_list)


State 289

  155 iteration_statement: for_loop LPAREN basic_statement SEMICOLON expression RPAREN $@27 statement .

    $default  reduce using rule 155 (iteration_statement)


State 290

  157 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON RPAREN $@28 statement .

    $default  reduce using rule 157 (iteration_statement)


State 291

  159 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON expression RPAREN $@29 . statement

    SEMICOLON   shift, and go to state 53
    BANG        shift, and go to state 54
    TILDE       shift, and go to state 55
    LBRACE      shift, and go to state 36
    LPAREN      shift, and go to state 56
    PLUSPLUS    shift, and go to state 57
    MINUSMINUS  shift, and go to state 58
    MINUS       shift, and go to state 59
    FOR         shift, and go to state 60
    DO          shift, and go to state 61
    WHILE       shift, and go to state 62
    CONTINUE    shift, and go to state 63
    BREAK       shift, and go to state 64
    SWITCH      shift, and go to state 65
    CASE        shift, and go to state 66
    IF          shift, and go to state 67
    RETURN      shift, and go to state 68
    CONST       shift, and go to state 1
    DEFAULT     shift, and go to state 69
    IDENTIFIER  shift, and go to state 70
    INTCONST    shift, and go to state 71
    HEXCONST    shift, and go to state 72

    declaration_specifier      go to state 73
    type_specifier             go to state 9
    conditional_expression     go to state 74
    logical_or_expression      go to state 75
    logical_and_expression     go to state 76
    inclusive_or_expression    go to state 77
    exclusive_or_expression    go to state 78
    and_expression             go to state 79
    equality_expression        go to state 80
    relational_expression      go to state 81
    shift_expression           go to state 82
    additive_expression        go to state 83
    multiplicative_expression  go to state 84
    cast_expression            go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    constant                   go to state 89
    expression                 go to state 90
    assignment_expression      go to state 91
    declaration                go to state 92
    compound_statement         go to state 93
    statement                  go to state 294
    basic_statement            go to state 95
    labeled_statement          go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    for_loop                   go to state 101
    jump_statement             go to state 102


State 292

  151 iteration_statement: DO $@24 statement WHILE LPAREN expression RPAREN $@25 SEMICOLON .

    $default  reduce using rule 151 (iteration_statement)


State 293

  144 selection_rest: statement ELSE $@21 statement .

    $default  reduce using rule 144 (selection_rest)


State 294

  159 iteration_statement: for_loop LPAREN basic_statement expression SEMICOLON expression RPAREN $@29 statement .

    $default  reduce using rule 159 (iteration_statement)
